//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Semestralka.DatabaseModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<Recipe> Recipes { get; set; }
        public virtual DbSet<Recipe_Ingredient> Recipe_Ingredient { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int Insert_User(string username, string password, string firstname, string lastname, Nullable<bool> user_right)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var user_rightParameter = user_right.HasValue ?
                new ObjectParameter("user_right", user_right) :
                new ObjectParameter("user_right", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_User", usernameParameter, passwordParameter, firstnameParameter, lastnameParameter, user_rightParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Category(string name_category)
        {
            var name_categoryParameter = name_category != null ?
                new ObjectParameter("name_category", name_category) :
                new ObjectParameter("name_category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Category", name_categoryParameter);
        }
    
        public virtual int category_Delete(string name_category)
        {
            var name_categoryParameter = name_category != null ?
                new ObjectParameter("name_category", name_category) :
                new ObjectParameter("name_category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("category_Delete", name_categoryParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Recipe(string name_recipe, Nullable<short> id_category, string instructions)
        {
            var name_recipeParameter = name_recipe != null ?
                new ObjectParameter("name_recipe", name_recipe) :
                new ObjectParameter("name_recipe", typeof(string));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(short));
    
            var instructionsParameter = instructions != null ?
                new ObjectParameter("instructions", instructions) :
                new ObjectParameter("instructions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Recipe", name_recipeParameter, id_categoryParameter, instructionsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Ingredient(string name_ingredient, string unit)
        {
            var name_ingredientParameter = name_ingredient != null ?
                new ObjectParameter("name_ingredient", name_ingredient) :
                new ObjectParameter("name_ingredient", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Ingredient", name_ingredientParameter, unitParameter);
        }
    
        public virtual int Insert_Recipe_Ingredient(Nullable<int> amount)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Recipe_Ingredient", amountParameter);
        }
    
        public virtual int Insert_Recipe_Ingredient1(Nullable<short> id_recipe, Nullable<short> id_ingredient, Nullable<int> amount)
        {
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(short));
    
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(short));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Recipe_Ingredient1", id_recipeParameter, id_ingredientParameter, amountParameter);
        }
    
        public virtual int Insert_Recipe_Ingredient2(Nullable<short> id_recipe, Nullable<short> id_ingredient, Nullable<int> amount)
        {
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(short));
    
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(short));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Recipe_Ingredient2", id_recipeParameter, id_ingredientParameter, amountParameter);
        }
    
        public virtual int Delete_Recipe_Ingredient(Nullable<int> id_ingredient, Nullable<int> id_recipe)
        {
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(int));
    
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Recipe_Ingredient", id_ingredientParameter, id_recipeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Recipe_Ingredient3(Nullable<short> id_recipe, Nullable<short> id_ingredient, Nullable<int> amount)
        {
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(short));
    
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(short));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Recipe_Ingredient3", id_recipeParameter, id_ingredientParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_User1(string username, string password, string firstname, string lastname, Nullable<bool> user_right)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var user_rightParameter = user_right.HasValue ?
                new ObjectParameter("user_right", user_right) :
                new ObjectParameter("user_right", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_User1", usernameParameter, passwordParameter, firstnameParameter, lastnameParameter, user_rightParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_User2(string username, string password, string firstname, string lastname, Nullable<bool> user_right)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var user_rightParameter = user_right.HasValue ?
                new ObjectParameter("user_right", user_right) :
                new ObjectParameter("user_right", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_User2", usernameParameter, passwordParameter, firstnameParameter, lastnameParameter, user_rightParameter);
        }
    
        public virtual int Delete_Ingredient(Nullable<int> id_ingredient)
        {
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Ingredient", id_ingredientParameter);
        }
    
        public virtual int Update_Category(Nullable<int> id_category, string name_category)
        {
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            var name_categoryParameter = name_category != null ?
                new ObjectParameter("name_category", name_category) :
                new ObjectParameter("name_category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Category", id_categoryParameter, name_categoryParameter);
        }
    
        public virtual int Update_Ingredient(Nullable<int> id_ingredient, string name_ingredient, string unit)
        {
            var id_ingredientParameter = id_ingredient.HasValue ?
                new ObjectParameter("id_ingredient", id_ingredient) :
                new ObjectParameter("id_ingredient", typeof(int));
    
            var name_ingredientParameter = name_ingredient != null ?
                new ObjectParameter("name_ingredient", name_ingredient) :
                new ObjectParameter("name_ingredient", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("unit", unit) :
                new ObjectParameter("unit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Ingredient", id_ingredientParameter, name_ingredientParameter, unitParameter);
        }
    
        public virtual int Delete_Recipe(Nullable<int> id_recipe)
        {
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Recipe", id_recipeParameter);
        }
    
        public virtual int Update_Recipe(Nullable<int> id_recipe, string name_recipe, string instructions)
        {
            var id_recipeParameter = id_recipe.HasValue ?
                new ObjectParameter("id_recipe", id_recipe) :
                new ObjectParameter("id_recipe", typeof(int));
    
            var name_recipeParameter = name_recipe != null ?
                new ObjectParameter("name_recipe", name_recipe) :
                new ObjectParameter("name_recipe", typeof(string));
    
            var instructionsParameter = instructions != null ?
                new ObjectParameter("instructions", instructions) :
                new ObjectParameter("instructions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Recipe", id_recipeParameter, name_recipeParameter, instructionsParameter);
        }
    
        public virtual int Delete_Category(Nullable<int> id_category)
        {
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Category", id_categoryParameter);
        }
    }
}
