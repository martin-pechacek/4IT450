//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Semestralka.DatabaseModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KucharkaEntities : DbContext
    {
        public KucharkaEntities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<Recipe> Recipes { get; set; }
        public virtual DbSet<Recipe_Step> Recipe_Step { get; set; }
        public virtual DbSet<Recipe_Step_Ingredients> Recipe_Step_Ingredients { get; set; }
    
        public virtual int Insert_User(string username, string password, string firstname, string lastname, Nullable<bool> user_right)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var user_rightParameter = user_right.HasValue ?
                new ObjectParameter("user_right", user_right) :
                new ObjectParameter("user_right", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_User", usernameParameter, passwordParameter, firstnameParameter, lastnameParameter, user_rightParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Insert_Category(string name_category)
        {
            var name_categoryParameter = name_category != null ?
                new ObjectParameter("name_category", name_category) :
                new ObjectParameter("name_category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_Category", name_categoryParameter);
        }
    
        public virtual int category_Delete(string name_category)
        {
            var name_categoryParameter = name_category != null ?
                new ObjectParameter("name_category", name_category) :
                new ObjectParameter("name_category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("category_Delete", name_categoryParameter);
        }
    }
}
